name: Relase distribution

on:
  push:
    branches:
    - '**'
  delete:

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - name: Release
      uses: satackey/push-prebuilt-action@v0.2.0-beta3
      with:
        push-branch: '{branch}-release'

  test_saving:
    runs-on: ubuntu-latest
    needs:
    - build_and_push

    steps:
    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      with:
        repotag: amazon/aws-cli
        key: aws-cli-docker-image-sha-${{ github.sha }}
    - run: docker pull amazon/aws-cli

  test_restoring:
    runs-on: ubuntu-latest
    needs:
    - test_saving

    steps:
    - uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      with:
        repotag: amazon/aws-cli
        key: aws-cli-docker-image-sha-${{ github.sha }}

    - run: docker inspect amazon/aws-cli
    - run: echo ::set-output name=id::$(docker image ls -q amazon/aws-cli)
      id: cached

    - run: docker pull amazon/aws-cli

    - run: docker inspect amazon/aws-cli
    - run: echo ::set-output name=id::$(docker image ls -q amazon/aws-cli)
      id: latest

    - run: |
        if [ ! ${{ steps.cached.outputs.id }} = ${{ steps.latest.outputs.id }} ];then
          echo cached != latest
          exit 1
        fi