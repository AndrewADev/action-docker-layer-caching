name: CI

on:
  push:
    branches:
    - '**'
  delete:

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Setup node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - name: Release
      uses: satackey/push-prebuilt-action@v0.2.0-beta3
      with:
        push-branch: '{branch}-release'

  # 
  # test built image caching

  test_saving_built:
    runs-on: ubuntu-latest
    needs:
    - build_and_push

    steps:
    - uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      name: Pull action
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      name: Run satackey/action-docker-layer-caching@${{ steps.extract.outputs.branch }}
      with:
        key: docker-layer-caching-test_project_node-sha:${{ github.sha }}-{hash}
        restore-keys: docker-layer-caching-test_project_node-sha:${{ github.sha }}-

    - run: docker-compose -f test_project/docker-compose.yml -p test_project build

  test_restoring_built:
    runs-on: ubuntu-latest
    needs:
    - test_saving_built

    steps:
    - uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      name: Pull action
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      name: Run satackey/action-docker-layer-caching@${{ steps.extract.outputs.branch }}
      with:
        # repotag: test_project_node
        key: docker-layer-caching-test_project_node-sha:${{ github.sha }}-{hash}
        restore-keys: docker-layer-caching-test_project_node-sha:${{ github.sha }}-

    - name: Show cached image info
      run: docker inspect test_project_node

    - name: Get cached image ID
      run: echo ::set-output name=id::$(docker image ls -q test_project_node)
      id: cached

    - run: docker-compose -f test_project/docker-compose.yml -p test_project build

    - name: Show built image info
      run: docker inspect test_project_node

    - name: Show built image ID
      run: echo ::set-output name=id::$(docker image ls -q test_project_node)
      id: latest

    - name: Compare cached ID and after build ID
      run: |
        if [ ! '${{ steps.cached.outputs.id }}' = '${{ steps.latest.outputs.id }}' ];then
          echo cached != latest
          exit 1
        fi

  # 
  # test pulled image caching

  test_saving_pulled:
    runs-on: ubuntu-latest
    needs:
    - build_and_push

    steps:
    - uses: actions/checkout@v2

    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      name: Pull action
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      name: Run satackey/action-docker-layer-caching@${{ steps.extract.outputs.branch }}
      with:
        key: docker-layer-caching-aws-cli-sha:${{ github.sha }}-{hash}
        restore-keys: docker-layer-caching-aws-cli-sha:${{ github.sha }}-

    - run: docker run --rm amazon/aws-cli --version

  test_restoring_pulled:
    runs-on: ubuntu-latest
    needs:
    - test_saving_pulled

    steps:
    - name: Extract
      id: extract
      run: |
        echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"

    - uses: actions/checkout@v2
      name: Pull action
      with:
        ref: ${{ steps.extract.outputs.branch }}-release
        path: action-dlc

    - uses: ./action-dlc
      name: Run satackey/action-docker-layer-caching@${{ steps.extract.outputs.branch }}
      with:
        key: docker-layer-caching-aws-cli-sha:${{ github.sha }}-{hash}
        restore-keys: docker-layer-caching-aws-cli-sha:${{ github.sha }}-

    - name: Show cached image info
      run: docker inspect amazon/aws-cli

    - name: Get cached image ID
      run: echo ::set-output name=id::$(docker image ls -q amazon/aws-cli)
      id: cached

    - run: docker pull amazon/aws-cli

    - name: Show built image info
      run: docker inspect amazon/aws-cli

    - name: Show built image ID
      run: echo ::set-output name=id::$(docker image ls -q amazon/aws-cli)
      id: latest

    - name: Compare cached ID and after build ID
      run: |
        if [ ! '${{ steps.cached.outputs.id }}' = '${{ steps.latest.outputs.id }}' ];then
          echo cached != latest
          exit 1
        fi
